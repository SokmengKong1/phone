{"ast":null,"code":"var _jsxFileName = \"F:\\\\Project\\\\Project\\\\book\\\\my-flipbook-app\\\\src\\\\PageFlipBook.jsx\",\n  _s = $RefreshSig$();\n// PageFlipBook.js\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Document, Page } from 'react-pdf';\nimport { PageFlip } from './Com_Type.pdf';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PageFlipBook = ({\n  pdf\n}) => {\n  _s();\n  const bookRef = useRef(null);\n  const pageFlipRef = useRef(null);\n  const [numPages, setNumPages] = useState(null);\n  useEffect(() => {\n    if (bookRef.current) {\n      pageFlipRef.current = new PageFlip(bookRef.current, {\n        width: 400,\n        // Adjust as per your requirement\n        height: 600,\n        // Adjust as per your requirement\n        size: 'stretch',\n        minWidth: 315,\n        maxWidth: 1000,\n        minHeight: 420,\n        maxHeight: 1350,\n        maxShadowOpacity: 0.5,\n        showCover: true,\n        mobileScrollSupport: false\n      });\n    }\n    return () => {\n      if (pageFlipRef.current) {\n        pageFlipRef.current.destroy();\n      }\n    };\n  }, []);\n  const onDocumentLoadSuccess = ({\n    numPages\n  }) => {\n    setNumPages(numPages);\n  };\n  useEffect(() => {\n    if (numPages && pageFlipRef.current) {\n      pageFlipRef.current.loadFromHTML(document.querySelectorAll('.page'));\n    }\n  }, [numPages]);\n  const renderPages = () => {\n    const pages = [];\n    for (let i = 1; i <= numPages; i++) {\n      pages.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page\",\n        children: /*#__PURE__*/_jsxDEV(Page, {\n          pageNumber: i,\n          width: 400\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this));\n    }\n    return pages;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-flip-book\",\n    ref: bookRef,\n    children: /*#__PURE__*/_jsxDEV(Document, {\n      file: pdf,\n      onLoadSuccess: onDocumentLoadSuccess,\n      loading: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading PDF...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 26\n      }, this),\n      children: numPages && renderPages()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_s(PageFlipBook, \"4IApsYVTyZHELTTpxkoef18UNFw=\");\n_c = PageFlipBook;\nexport default PageFlipBook;\nvar _c;\n$RefreshReg$(_c, \"PageFlipBook\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Document","Page","PageFlip","jsxDEV","_jsxDEV","PageFlipBook","pdf","_s","bookRef","pageFlipRef","numPages","setNumPages","current","width","height","size","minWidth","maxWidth","minHeight","maxHeight","maxShadowOpacity","showCover","mobileScrollSupport","destroy","onDocumentLoadSuccess","loadFromHTML","document","querySelectorAll","renderPages","pages","i","push","className","children","pageNumber","fileName","_jsxFileName","lineNumber","columnNumber","ref","file","onLoadSuccess","loading","_c","$RefreshReg$"],"sources":["F:/Project/Project/book/my-flipbook-app/src/PageFlipBook.jsx"],"sourcesContent":["// PageFlipBook.js\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { Document, Page } from 'react-pdf';\r\nimport { PageFlip } from './Com_Type.pdf';\r\n\r\nconst PageFlipBook = ({ pdf }) => {\r\n    const bookRef = useRef(null);\r\n    const pageFlipRef = useRef(null);\r\n    const [numPages, setNumPages] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (bookRef.current) {\r\n            pageFlipRef.current = new PageFlip(\r\n                bookRef.current,\r\n                {\r\n                    width: 400, // Adjust as per your requirement\r\n                    height: 600, // Adjust as per your requirement\r\n                    size: 'stretch',\r\n                    minWidth: 315,\r\n                    maxWidth: 1000,\r\n                    minHeight: 420,\r\n                    maxHeight: 1350,\r\n                    maxShadowOpacity: 0.5,\r\n                    showCover: true,\r\n                    mobileScrollSupport: false,\r\n                }\r\n            );\r\n        }\r\n\r\n        return () => {\r\n            if (pageFlipRef.current) {\r\n                pageFlipRef.current.destroy();\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    const onDocumentLoadSuccess = ({ numPages }) => {\r\n        setNumPages(numPages);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (numPages && pageFlipRef.current) {\r\n            pageFlipRef.current.loadFromHTML(document.querySelectorAll('.page'));\r\n        }\r\n    }, [numPages]);\r\n\r\n    const renderPages = () => {\r\n        const pages = [];\r\n        for (let i = 1; i <= numPages; i++) {\r\n            pages.push(\r\n                <div className=\"page\" key={i}>\r\n                    <Page pageNumber={i} width={400} />\r\n                </div>\r\n            );\r\n        }\r\n        return pages;\r\n    };\r\n\r\n    return (\r\n        <div className=\"page-flip-book\" ref={bookRef}>\r\n            <Document\r\n                file={pdf}\r\n                onLoadSuccess={onDocumentLoadSuccess}\r\n                loading={<div>Loading PDF...</div>}\r\n            >\r\n                {numPages && renderPages()}\r\n            </Document>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PageFlipBook;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}